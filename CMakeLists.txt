cmake_minimum_required(VERSION 3.5)
set(CMAKE_CXX_STANDARD 11)
project(Granite LANGUAGES CXX C)

if (CMAKE_COMPILER_IS_GNUCXX)
   set(GRANITE_CXX_FLAGS -Wall -Wextra -pedantic -Wno-missing-field-initializers)
endif()

option(SANITIZE_ADDRESS "Sanitize" OFF)
if (SANITIZE_ADDRESS)
    set(GRANITE_CXX_FLAGS ${GRANITE_CXX_FLAGS} -fsanitize=address)
    set(GRANITE_LINK_FLAGS -fsanitize=address)
else()
    set(GRANITE_LINK_FLAGS)
endif()

option(VULKAN_WSI "Enable Vulkan WSI." ON)

set(SHADERC_THIRD_PARTY_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/third_party" CACHE STRING "Third party path." FORCE)
set(SPIRV-Headers_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/third_party/spirv-headers" CACHE STRING "SPIRV-Headers path")
set(SHADERC_SKIP_TESTS ON)
add_subdirectory(third_party/shaderc EXCLUDE_FROM_ALL)
add_subdirectory(third_party/stb EXCLUDE_FROM_ALL)

function(add_granite_library NAME)
    add_library(${NAME} STATIC ${ARGN})
    target_compile_options(${NAME} PRIVATE ${GRANITE_CXX_FLAGS})
endfunction()

function(add_granite_executable NAME)
    if (ANDROID)
        add_library(${NAME} SHARED ${ARGN})
        target_link_libraries(${NAME} log android)
    else()
        add_executable(${NAME} ${ARGN})
    endif()
    target_compile_options(${NAME} PRIVATE ${GRANITE_CXX_FLAGS})
    if (SANITIZE_ADDRESS)
        set_target_properties(${NAME} PROPERTIES LINK_FLAGS ${GRANITE_LINK_FLAGS})
    endif()
endfunction()

add_subdirectory(compiler)

add_subdirectory(event)
add_subdirectory(util)
add_subdirectory(math)
add_subdirectory(vulkan)
add_subdirectory(filesystem)
add_subdirectory(renderer)
add_subdirectory(ui)
add_subdirectory(importers)
add_subdirectory(application)

add_granite_executable(sandbox cube_test.cpp)
target_link_libraries(sandbox math application)

add_subdirectory(network)
add_subdirectory(tools)

#if (WIN32)
#    if (CMAKE_COMPILER_IS_GNUCXX)
#        set_target_properties(main PROPERTIES LINK_FLAGS -mwindows)
#    endif()
#endif()

